{"version":3,"sources":["components/Card.js","components/Header.js","components/Button.js","pages/Victory.js","pages/Menu.js","components/ScoreEntry.js","pages/Scoreboard.js","components/Snowflakes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","isFlipped","handleCardClick","isMatched","name","profileDescription","img","className","onClick","draggable","src","alt","Header","liuid","guesses","time","correct","left","seconds","Math","round","Button","link","href","children","to","Victory","onRestart","intervalId","_sendScore","clearInterval","Menu","onStart","ScoreEntry","program","style","Scoreboard","scores","length","map","score","i","user","time_taken","total_tries","Snowflakes","Array","fill","a","cards","process","description","App","useState","memoryDeck","setMemoryDeck","openCards","setOpenCards","finishedCards","setFinishedCards","moves","setMoves","Date","startTime","setStartTime","currentTime","setCurrentTime","timerActive","setTimerActive","undefined","setLiuid","setIntervalId","setName","setScores","resetCards","array","randomIndex","currentIndex","floor","random","shuffle","resetTimer","id","setInterval","console","log","cardSetsLeft","useEffect","FetchLiuId","headers","Accept","Origin","authorization","window","localStorage","getItem","options","method","Headers","fetch","then","res","json","data","username","pretty_name","sendScore","JSON","stringify","url_heroku","mode","cache","credentials","redirect","referrerPolicy","body","status","alert","access","URLSearchParams","location","search","get","setItem","history","replaceState","document","title","startGame","timeValue","exact","path","index","includes","prev","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.897d8769.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nfunction Card({\n  isFlipped,\n  handleCardClick,\n  isMatched,\n  name,\n  profileDescription,\n  img,\n}) {\n  return (\n    <div\n      className={`card ${isFlipped() ? \"card-show\" : \"\"} ${\n        isMatched() ? \"card-show card-matched\" : \"\"\n      } `}\n      onClick={() => handleCardClick()}\n      draggable=\"false\"\n    >\n      <div className=\"card-content\">\n        <h3>{name}</h3>\n        <p>{profileDescription}</p>\n        <img src={img} alt={name} className=\"card-img\" draggable=\"false\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Header.css\";\n\nfunction Header({ liuid, guesses, time, correct, left, name }) {\n  const seconds = Math.round(time / 1000);\n\n  return (\n    <div className=\"header\">\n      <div className=\"title-bar\">\n        <h1>Webutskottets julkalenderbidrag 2021</h1>\n      </div>\n\n      <div className=\"stats\">\n        <p>\n          {name} ({liuid})\n        </p>\n        <p>Time passed: {seconds}</p>\n        <p>Total guesses: {guesses}</p>\n        <p>Correct guesses: {correct}</p>\n        <p>Pairs left: {left}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nfunction Button({ link, onClick, href, children }) {\n  return link ? (\n    <Link to={link} onClick={onClick} className=\"button\">\n      {children}\n    </Link>\n  ) : (\n    href && (\n      <a href={href} className=\"button\">\n        Login\n      </a>\n    )\n  );\n}\nexport default Button;\n","import Button from \"../components/Button\";\n\n\n\nfunction Victory({ onRestart, intervalId,_sendScore, time, guesses }) {\n  const seconds = Math.round(time / 1000);\n\n  clearInterval(intervalId)\n  \n\n  return (\n    <div className=\"Victory\">\n      <h1>U did it!</h1>\n      <h2>Time: {seconds}</h2>\n      <h2>Guesses: {guesses}</h2>\n\n      <div  className=\"button-column\">\n        <Button link=\"/victory\" onClick={_sendScore}>\n          Spara i scoreboarden!\n        </Button>\n        <Button link=\"/game\" onClick={onRestart}>\n          Starta om!\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Victory;\n","import Button from \"../components/Button\";\n\nfunction Menu({ onStart, liuid }) {\n  return (\n    <div className=\"Menu\">\n      <h1>Varmt välkommen till Webbutskottets julkalenderlucka!</h1>\n\n      <div className=\"button-column\">\n        <Button link=\"/game\" onClick={onStart}>\n          Spela!\n        </Button>\n        <Button link=\"/scoreboard\">Scoreboard!</Button>\n        {!liuid && (\n          <Button href=\"https://backend.d-sektionen.se/account/token/?redirect=https://d-sektionen.github.io/julkalenderbidrag-webbutskottet-2021/\">\n            Login\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default Menu;\n","import React from \"react\";\n\nimport './ScoreEntry.css'\n\nfunction ScoreEntry({ name, program, time, guesses }) {\n  return (\n    <div className=\"score-entry\" style={{}}>\n      <h3 className=\"header\">{name} {/*({program})*/}</h3>\n      <p className=\"section\">Tid: {time}</p>\n      <p className=\"section\">Gissningar: {guesses}</p>\n    </div>\n  );\n}\n\nexport default ScoreEntry;\n","import ScoreEntry from \"../components/ScoreEntry\";\nimport Button from \"../components/Button\";\n\nfunction Scoreboard({scores}) {\n  return (\n    <div className=\"Scoreboard\">\n      <h1>Scoreboard</h1>\n\n      <div className=\"score-list\">\n        {scores.length > 0 ? (scores.map((score, i) =>\n          (<ScoreEntry key={i} name={score.user} program=\"D\" time={score.time_taken} guesses={score.total_tries} /> ) \n        )): \"\"}\n      </div>\n\n      <Button link=\"/\">Tillbaka!</Button>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React from \"react\"\n\nimport \"./Snowflakes.css\"\n\nfunction Snowflakes() {\n  return (\n    <div className='snowflakes' aria-hidden='true'>\n      {Array(50)\n        .fill(\"❅\")\n        .map((a, i) => (\n          <div className='snowflake' key={i}>❅</div>\n        ))}\n    </div>\n  )\n}\n\nexport default Snowflakes","import { useEffect, useState } from \"react\";\nimport { MemoryRouter, Redirect, Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport \"./components/Card\";\nimport \"./components/Header\";\n\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Victory from \"./pages/Victory\";\nimport Menu from \"./pages/Menu\";\nimport Scoreboard from \"./pages/Scoreboard\";\nimport Snowflakes from \"./components/Snowflakes\";\n\nconst cards = [\n  {\n    name: \"Isak Horvath (Webmaster)\",\n    img: process.env.PUBLIC_URL + \"/images/isse.png\",\n    description:\n      \"Programmeringsintreserad person som pluggar sitt tredje år på U-programmet!\",\n  },\n  {\n    name: \"Viktor Holta\",\n    img: process.env.PUBLIC_URL + \"/images/viktor.png\",\n    description: \"Programmerings- och grafikinriktad mjukvaruingenjör!\",\n  },\n  {\n    name: \"Martin Kuiper\",\n    img: process.env.PUBLIC_URL + \"/images/martin.jpeg\",\n    description:\n      \"Martin gillar att bygga coola saker och sjunga karaoke. Han pluggar IP2 och har en dödsfejd med css.\",\n  },\n  {\n    name: \"Erik Ekelöf\",\n    img: process.env.PUBLIC_URL + \"/images/erik.png\",\n    description: \"Pluggar IP2\",\n  },\n   {\n    name: \"Albin Thulin\",\n    img: process.env.PUBLIC_URL + \"/images/albin.jpg\",\n    description: \"Går första året på D\",\n  },\n  {\n    name: \"Jennifer Santos\",\n    img: process.env.PUBLIC_URL + \"/images/jennifer.png\",\n    description: \"Pluggar D1\",\n  },\n  {\n    name: \"Michelle Krejci\",\n    img: process.env.PUBLIC_URL + \"/images/mich.png\",\n    description: \"Programmering och pengar är fett kul.\",\n  },\n  {\n    name: \"Felix Lindgren\",\n    img: process.env.PUBLIC_URL + \"/images/felix.png\",\n    description: \"Pluggar fjärde året data.\",\n  },  \n];\n\nconst shuffle = (array) => {\n  let currentIndex = array.length;\n  let randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n};\n\nfunction App() {\n  const [memoryDeck, setMemoryDeck] = useState([]);\n  const [openCards, setOpenCards] = useState([]);\n  const [finishedCards, setFinishedCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n\n  const [startTime, setStartTime] = useState(new Date());\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [timerActive, setTimerActive] = useState(false);\n  const [liuid, setLiuid] = useState(undefined);\n  const [intervalId, setIntervalId] = useState(null);\n  const [name, setName] = useState(undefined);\n  const [scores, setScores] = useState([]);\n\n  const resetCards = () => {\n    setFinishedCards([]);\n    setOpenCards([]);\n    setMoves(0);\n    setMemoryDeck(shuffle([...cards, ...cards]));\n  };\n\n\n  const resetTimer = () => {\n    setStartTime(new Date());\n    let id = setInterval(() => {\n      console.log(timerActive, cardSetsLeft)\n      if (timerActive) {\n        setCurrentTime(new Date());\n      }\n    }, 1000);\n    setIntervalId(id)\n    setTimerActive(true);\n  };\n\n  const handleClick = (data) => {\n    if (openCards.length === 1 && openCards[0] !== data) {\n      setOpenCards((prev) => [...prev, data]);\n      setMoves((moves) => moves + 1);\n    } else {\n      // clear timer?\n      setOpenCards([data]);\n    }\n  };\n\n  // Check if cards flipped are the same\n  useEffect(() => {\n    if (\n      openCards.length === 2 &&\n      memoryDeck[openCards[0]].name === memoryDeck[openCards[1]].name\n    ) {\n      setFinishedCards((finishedCards) => [...finishedCards, ...openCards]);\n    }\n  }, [openCards, memoryDeck]);\n\n  useEffect(() => {\n    setTimerActive(true);\n  }, []);\n\n  const FetchLiuId = async () => {\n    let headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Origin: \"\",\n      authorization: \"Bearer \" + window.localStorage.getItem(\"token\"),\n    };\n    let options = { method: \"get\", headers: new Headers(headers) };\n    await fetch(\"https://backend.d-sektionen.se/account/me\", options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLiuid(data.username);\n        setName(data.pretty_name);\n      });\n  };\n\n  const sendScore = async () => {\n    /* let headers = {'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': ''}\n    let options = {method:\"post\", headers: new Headers(headers), mode: 'cors'} */\n    let data = JSON.stringify({\n      user: liuid,\n      time_taken: (currentTime - startTime)/1000,\n      total_tries: moves,\n    });\n    let url_local = \"http://localhost:8000\";\n    let url_heroku = \"https://webbu-julkalender-21.herokuapp.com\";\n    await fetch(url_heroku + \"/scoreboard/create/\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + window.localStorage.getItem(\"token\"),\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    }).then(res => {\n      let response = res.json()\n      if(res.status != 200){\n        alert(\"Nått blev fel\")\n      } else {\n        alert(\"Sparat\")\n      }\n    })\n  };\n\n  useEffect(()=>{\n    const urlParams = new URLSearchParams(window.location.search);\n    const access = urlParams.get(\"access\");\n    if (access != null) {\n      window.localStorage.setItem(\"token\", access);\n      window.history.replaceState({}, document.title, \"/\");\n      FetchLiuId();\n    } else if (\n      window.localStorage.getItem(\"token\") != \"null\" ||\n      window.localStorage.getItem(\"token\") != null\n    ) {\n      FetchLiuId();\n    }\n  }, [])\n  \n\n  useEffect(()=>{\n    fetch(\"https://webbu-julkalender-21.herokuapp.com/scoreboard/view/\")\n    .then(res => res.json())\n    .then(data => setScores(data))\n    .then(()=>{console.log(scores)})\n  }, [])\n\n  const startGame = () => {\n    resetTimer();\n    resetCards();\n  };\n\n  const cardSets = cards.length;\n  const cardSetsLeft = cardSets - finishedCards.length / 2;\n  const timeValue = currentTime - startTime;\n\n\n  return (\n    <div className=\"App\">\n      <Snowflakes />\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Menu\n              onStart={startGame}\n              resetTimer={resetTimer}\n              resetCards={resetCards}\n              liuid={liuid}\n            />\n          </Route>\n          <Route path=\"/scoreboard\">\n            <Scoreboard scores={scores}/>\n          </Route>\n          <Route path=\"/game\">\n            <Header\n              name={name}\n              liuid={liuid}\n              time={timeValue < 0 ? 0 : timeValue}\n              correct={finishedCards.length / 2}\n              left={cardSetsLeft}\n              guesses={moves}\n            />\n            {/* <button onClick={sendScore}>Send score</button> */}\n            <div className=\"container\">\n              <div className=\"card-area\">\n                {cardSetsLeft > 0 ? (\n                  memoryDeck.map(({ img, name, description }, i) => (\n                    <Card\n                      key={i}\n                      index={i}\n                      name={name}\n                      profileDescription={description}\n                      img={img}\n                      description=\"Back\"\n                      isFlipped={() => openCards.includes(i)}\n                      isMatched={() => finishedCards.includes(i)}\n                      handleCardClick={() => handleClick(i)}\n                    />\n                  ))\n                ) : (\n                  <Redirect to=\"/victory\" />\n                )}\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/victory\">\n            \n            <Victory\n              time={currentTime - startTime}\n              guesses={moves}\n              _sendScore={sendScore}\n              intervalId={intervalId}\n              onRestart={startGame}\n            />\n          </Route>\n        </Switch>\n      </MemoryRouter>\n\n      <div></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}